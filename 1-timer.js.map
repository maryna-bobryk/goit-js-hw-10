{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//!==================================================\n\nconst refs = {\n  btn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  input: document.querySelector('#datetime-picker'),\n};\n\n//!==================================================\nlet userDate = null;\nrefs.btn.disabled = true;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // onReady(selectedDates, dateStr, instance) {\n  //   instance.calendarContainer.classList.add('custom-flatpickr');\n  // },\n  onReady(selectedDates, dateStr, instance) {\n    instance.calendarContainer.style.backgroundColor = '#f0f0f0';\n  },\n  onClose(selectedDates) {\n    userDate = selectedDates[0];\n    if (userDate < new Date()) {\n      iziToast.error({\n        title: 'Oops...',\n        message: 'the day is in the past',\n        iconColor: '#fff',\n        titleColor: '#fff',\n        messageColor: '#fff',\n        backgroundColor: '#EF4040',\n        position: 'topRight',\n        transitionIn: 'flipInX',\n      });\n      refs.btn.disabled = true;\n    } else {\n      refs.btn.disabled = false;\n    }\n  },\n};\n\nconst calender = flatpickr(refs.input, options);\n\n//!==================================================\nconst countdownTimer = {\n  intervalID: null,\n\n  start() {\n    this.intervalClear();\n\n    refs.btn.disabled = true;\n    refs.input.disabled = true;\n\n    this.intervalID = setInterval(() => {\n      const timeLeft = this.updateTimer();\n      this.displayTimeLeft(timeLeft);\n      if (timeLeft <= 0) {\n        clearInterval(this.intervalID);\n        iziToast.success({\n          message: 'Time is up!',\n          iconColor: '#fff',\n          titleColor: '#fff',\n          messageColor: '#fff',\n          backgroundColor: '#94D5DB',\n          position: 'topRight',\n          transitionIn: 'flipInX',\n        });\n      }\n    }, 1000);\n    iziToast.info({\n      message: 'Timer started!',\n      iconColor: '#fff',\n      titleColor: '#fff',\n      messageColor: '#fff',\n      backgroundColor: '#89C757',\n      position: 'topRight',\n      transitionIn: 'flipInX',\n    });\n  },\n\n  updateTimer() {\n    const currentTime = new Date();\n    const diff = userDate - currentTime;\n    const time = convertMs(diff);\n    return time;\n  },\n\n  displayTimeLeft(time) {\n    refs.days.textContent = this.addLeadingZero(time.days);\n    refs.hours.textContent = this.addLeadingZero(time.hours);\n    refs.minutes.textContent = this.addLeadingZero(time.minutes);\n    refs.seconds.textContent = this.addLeadingZero(time.seconds);\n  },\n\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  },\n\n  intervalClear() {\n    if (this.intervalID) {\n      clearInterval(this.intervalID);\n    }\n    this.intervalID = null;\n  },\n};\n\nrefs.btn.addEventListener('click', () => {\n  countdownTimer.start();\n});\n\n//!==================================================\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["refs","userDate","options","selectedDates","dateStr","instance","iziToast","flatpickr","countdownTimer","timeLeft","diff","convertMs","time","value","ms","days","hours","minutes","seconds"],"mappings":"+IAMA;AAEA,MAAMA,EAAO,CACX,IAAK,SAAS,cAAc,cAAc,EAC1C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,MAAO,SAAS,cAAc,kBAAkB,CAClD,EAEA;AACA,IAAIC,EAAW,KACfD,EAAK,IAAI,SAAW,GACpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAIjB,QAAQC,EAAeC,EAASC,EAAU,CACxCA,EAAS,kBAAkB,MAAM,gBAAkB,SACpD,EACD,QAAQF,EAAe,CACrBF,EAAWE,EAAc,CAAC,EACtBF,EAAW,IAAI,MACjBK,EAAS,MAAM,CACb,MAAO,UACP,QAAS,yBACT,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,SACtB,CAAO,EACDN,EAAK,IAAI,SAAW,IAEpBA,EAAK,IAAI,SAAW,EAEvB,CACH,EAEiBO,EAAUP,EAAK,MAAOE,CAAO,EAE9C;AACA,MAAMM,EAAiB,CACrB,WAAY,KAEZ,OAAQ,CACN,KAAK,cAAa,EAElBR,EAAK,IAAI,SAAW,GACpBA,EAAK,MAAM,SAAW,GAEtB,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMS,EAAW,KAAK,cACtB,KAAK,gBAAgBA,CAAQ,EACzBA,GAAY,IACd,cAAc,KAAK,UAAU,EAC7BH,EAAS,QAAQ,CACf,QAAS,cACT,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,SACxB,CAAS,EAEJ,EAAE,GAAI,EACPA,EAAS,KAAK,CACZ,QAAS,iBACT,UAAW,OACX,WAAY,OACZ,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,SACpB,CAAK,CACF,EAED,aAAc,CAEZ,MAAMI,EAAOT,EADO,IAAI,KAGxB,OADaU,EAAUD,CAAI,CAE5B,EAED,gBAAgBE,EAAM,CACpBZ,EAAK,KAAK,YAAc,KAAK,eAAeY,EAAK,IAAI,EACrDZ,EAAK,MAAM,YAAc,KAAK,eAAeY,EAAK,KAAK,EACvDZ,EAAK,QAAQ,YAAc,KAAK,eAAeY,EAAK,OAAO,EAC3DZ,EAAK,QAAQ,YAAc,KAAK,eAAeY,EAAK,OAAO,CAC5D,EAED,eAAeC,EAAO,CACpB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,EAED,eAAgB,CACV,KAAK,YACP,cAAc,KAAK,UAAU,EAE/B,KAAK,WAAa,IACnB,CACH,EAEAb,EAAK,IAAI,iBAAiB,QAAS,IAAM,CACvCQ,EAAe,MAAK,CACtB,CAAC,EAED;AAEA,SAASG,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}